{"version":3,"sources":["services/phones.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","ErrorNotification","message","className","GreenNotification","Notification","type","Filter","filterString","handleFilterChange","value","onChange","Entry","name","number","id","handleClick","text","Button","onClick","PersonForm","newName","newNumber","addEntry","handleChangeName","handleChangeNumber","Persons","shownPersons","map","person","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterString","setShownPersons","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","axios","get","then","request","data","allPersons","updateEntry","newPerson","put","updatePerson","Number","response","console","log","setTimeout","catch","error","event","target","toLowerCase","filter","includes","preventDefault","newEntry","window","confirm","find","post","addedPerson","concat","delete","deletePerson","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4718908.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = \"/api/persons\"\n\nexport const createPerson = (newEntry) => {\n    const request = axios.post(baseUrl, newEntry)\n    return request.then(request => request.data)\n}\n\nexport const getAllPersons = () => {\n    const request = axios.get(baseUrl)\n    return request.then(request => request.data)\n}\n\nexport const deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(request => request.data)\n}\n\nexport const updatePerson = (id, newPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\n    return request.then(request => request.data)\n}","import React from 'react'\n\n// Type can be e: error or n:notification\n const Notification = ({message, type}) => {\n    if (message === null) {\n        return null\n    }\n    if (type === 'e'){\n        return <ErrorNotification message={message}/>\n    } else if (type === 'n') {\n        return <GreenNotification message={message}/>\n    }\n}\n\nconst ErrorNotification = ({message}) => {\n    return (\n        <div className=\"error-notification\">{message}</div>\n    )\n}\n\nconst GreenNotification = ({message}) => {\n    return (\n        <div className=\"green-notification\">{message}</div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport { createPerson, getAllPersons, deletePerson, updatePerson } from './services/phones'\nimport Notification from './components/Notification'\nimport './index.css'\n\n\nconst Filter = ({filterString, handleFilterChange}) => {\n  return <div>filter shown with<input value={filterString} onChange={handleFilterChange}/></div>\n}\n\nconst Entry = ({name, number, id, handleClick}) => \n  <li className=\"phone-entry\">{name} {number} <Button handleClick={handleClick} text={\"delete\"} id={id}/></li>\n\n\nconst Button = ({handleClick, text, id}) =>\n  <button id={id} onClick={handleClick}>{text}</button>\n\nconst PersonForm = ({newName, newNumber, addEntry, handleChangeName, handleChangeNumber}) => {\nreturn(\n<form>\n  <div>name: <input value={newName} onChange={handleChangeName}/></div>\n  <div>number: <input value={newNumber} onChange={handleChangeNumber}/></div>\n  <div><button type=\"submit\" onClick={addEntry}>add</button></div>\n</form>\n)}\n\nconst Persons = ({shownPersons, handleClick}) => {\n  return (\n    <ul type=\"none\">\n    {shownPersons.map(person => \n    <Entry\n     key={person.name}\n     name={person.name}\n     number={person.number} \n     id={person.id}\n     handleClick={handleClick}/>)}\n  </ul>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterString, setFilterString ] = useState('')\n  const [ shownPersons, setShownPersons ] = useState(persons)\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  const [ notificationType, setNotificationType ] = useState('n')\n\n  useEffect(() => {\n      getAllPersons()\n      .then(allPersons => {\n        setPersons(allPersons)\n        setShownPersons(allPersons)\n      })\n  }, [])\n\n  const deleteEntry = (event) => {\n    event.preventDefault()\n    \n    const id = Number(event.target.id)\n    const person = persons.find(person => person.id === id)\n    if (!person) {\n      return null;\n    }\n    const name = person.name\n    const confirm = window.confirm(`Delete ${name}?`)\n    if (confirm) {  \n      deletePerson(id)\n      .then(response => {\n      setPersons(persons.filter(person => person.id !== id))\n      setShownPersons(persons.filter(person => person.id !== id))\n      setNotificationType('n')\n      setNotificationMessage(`${name} successfully deleted`)\n      setTimeout(() => {\n        setNotificationMessage(null)\n        }, 5000)\n      })    \n      .catch(error => {\n        setNotificationType('e')\n        setNotificationMessage(`${name} info not found in server`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n    }\n    \n  }\n\n  const updateEntry = (id, newPerson) => {\n    id = Number(id)\n    updatePerson(id, newPerson)\n    .then(response => {\n      console.log(response)\n      setPersons(persons.map(person => person.id !== id ? person : response))\n      setShownPersons(shownPersons.map(person => person.id !== id ? person : response))\n      setNotificationType('n')\n      setNotificationMessage(`${newPerson.name} successfully updated`)\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    })\n    .catch(error => {\n      setNotificationType('e')\n      setNotificationMessage(`${newPerson.name} info not found in server`)\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    })\n    \n  } \n\n  const addEntry = (event) => {\n    event.preventDefault()\n    const newPerson = {name: newName, number:newNumber}\n    const currNames = persons.map(person => person.name.toLowerCase())\n    if (currNames.includes(newPerson.name.toLowerCase())) {\n      const confirm = window.confirm(`${newName} is already added to the phonebook,\n       replace the old number with a new one?`)\n      if (confirm) {\n        updateEntry(persons.find(person => person.name.toLowerCase() === newName.toLowerCase()).id, newPerson)\n      }\n    } else {\n      createPerson(newPerson)\n      .then(addedPerson => {\n        console.log(addedPerson)\n        setPersons(persons.concat(addedPerson))\n        setShownPersons(persons.concat(addedPerson))\n        setFilterString(\"\")\n        setNotificationType('n')\n        setNotificationMessage(`Successfully added ${newPerson.name}`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n    }\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  const handleChangeNumber = (event) => setNewNumber(event.target.value)\n\n  const handleChangeName = (event) => setNewName(event.target.value)\n\n  const handleFilterChange = (event) => {\n    const value = event.target.value.toLowerCase()\n    setFilterString(value)\n    setShownPersons(persons.filter(person => person.name.toLowerCase().includes(value)))\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} type={notificationType}/>\n        <Filter filterString={filterString} handleFilterChange={handleFilterChange}/>\n      <h3>Add new</h3>\n        <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleChangeName={handleChangeName}\n        handleChangeNumber={handleChangeNumber} \n        addEntry={addEntry}\n        />\n      <h3>Numbers</h3>\n        <Persons \n        shownPersons={shownPersons}\n        handleClick={deleteEntry}\n        />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}